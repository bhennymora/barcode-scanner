{"version":3,"sources":["BarcodeTextField.js","App.js","index.js"],"names":["BarcodeTextField","props","handleClick","bind","this","startScanner","Quagga","init","inputStream","name","type","target","document","querySelector","constraints","width","height","facingMode","decoder","readers","debug","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","err","alert","console","log","innerHTML","start","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","parseInt","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","codeResult","code","line","onDetected","stop","value","style","display","id","onClick","React","Component","App","className","ReactDOM","render","getElementById"],"mappings":"iQA8IeA,E,kDAvIb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,+CAMnB,WAIIC,KAAKC,iB,0BAIT,WACEC,IAAOC,KACL,CACEC,YAAa,CACXC,KAAM,OACNC,KAAM,aACNC,OAAQC,SAASC,cAAc,sBAC/BC,YAAa,CACXC,MAAO,IACPC,OAAQ,IACRC,WAAY,gBAGhBC,QAAS,CACPC,QAAS,CACP,kBACA,aACA,eACA,iBACA,qBACA,iBACA,aACA,eACA,gBAEFC,MAAO,CACLC,YAAY,EACZC,aAAa,EACbC,kBAAkB,EAClBC,cAAc,EACdC,YAAY,EACZC,iBAAiB,EACjBC,0BAA0B,EAC1BC,eAAgB,CACdC,iBAAiB,EACjBC,oBAAoB,EACpBC,QAAQ,OAKhB,SAASC,GACP,GAAIA,EAKF,OAJAC,MAAM,uCACNC,QAAQC,IAAIH,QACZpB,SAASC,cAAc,sBAAsBuB,UAAY,IAK3DF,QAAQC,IAAI,2CACZ7B,IAAO+B,WAOX/B,IAAOgC,aAAY,SAASC,GAC1B,IAAIC,EAAalC,IAAOmC,OAAOC,IAAIC,QACjCC,EAAgBtC,IAAOmC,OAAOI,IAAIF,QAEhCJ,IACEA,EAAOO,QACTN,EAAWO,UACT,EACA,EACAC,SAASJ,EAAcK,aAAa,UACpCD,SAASJ,EAAcK,aAAa,YAEtCV,EAAOO,MACJI,QAAO,SAASC,GACf,OAAOA,IAAQZ,EAAOY,OAEvBC,SAAQ,SAASD,GAChB7C,IAAO+C,WAAWC,SAASH,EAAK,CAAEI,EAAG,EAAGC,EAAG,GAAKhB,EAAY,CAC1DiB,MAAO,QACPC,UAAW,QAKfnB,EAAOY,KACT7C,IAAO+C,WAAWC,SAASf,EAAOY,IAAK,CAAEI,EAAG,EAAGC,EAAG,GAAKhB,EAAY,CACjEiB,MAAO,OACPC,UAAW,IAIXnB,EAAOoB,YAAcpB,EAAOoB,WAAWC,MACzCtD,IAAO+C,WAAWC,SAChBf,EAAOsB,KACP,CAAEN,EAAG,IAAKC,EAAG,KACbhB,EACA,CAAEiB,MAAO,MAAOC,UAAW,QAMnCpD,IAAOwD,YAAW,SAASvB,GACzBjC,IAAOyD,OACPnD,SAASC,cAAc,eAAemD,MAAQzB,EAAOoB,WAAWC,KAChEhD,SAASC,cAAc,sBAAsBuB,UAAY,GACzDF,QAAQC,IACN,qCAAuCI,EAAOoB,WAAWC,KAAO,IAChErB,Q,oBAKN,WACE,OACE,sBAAK0B,MAAO,CAAEC,QAAS,gBAAvB,UACE,uBAAOxD,KAAK,OAAOyD,GAAG,eACtB,wBAAQC,QAAShE,KAAKF,YAAtB,2B,GAlIuBmE,IAAMC,WCStBC,MAZf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKL,GAAG,sBACR,gCACE,mBAAGF,MAAO,CAAEC,QAAS,gBAArB,uBACA,cAAC,EAAD,CAAkBD,MAAO,CAAEC,QAAS,yBCJ5CO,IAASC,OACL,cAAC,EAAD,IACD9D,SAAS+D,eAAe,U","file":"static/js/main.1619d4cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Quagga from \"quagga\"; // ES6\r\nimport \"./App.css\";\r\n\r\nvar _scannerIsRunning = false;\r\n\r\nclass BarcodeTextField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    if (_scannerIsRunning) {\r\n      Quagga.stop();\r\n    } else {\r\n      this.startScanner();\r\n    }\r\n  }\r\n\r\n  startScanner() {\r\n    Quagga.init(\r\n      {\r\n        inputStream: {\r\n          name: \"Live\",\r\n          type: \"LiveStream\",\r\n          target: document.querySelector(\"#scanner-container\"),\r\n          constraints: {\r\n            width: 480,\r\n            height: 320,\r\n            facingMode: \"environment\"\r\n          }\r\n        },\r\n        decoder: {\r\n          readers: [\r\n            \"code_128_reader\",\r\n            \"ean_reader\",\r\n            \"ean_8_reader\",\r\n            \"code_39_reader\",\r\n            \"code_39_vin_reader\",\r\n            \"codabar_reader\",\r\n            \"upc_reader\",\r\n            \"upc_e_reader\",\r\n            \"i2of5_reader\"\r\n          ],\r\n          debug: {\r\n            showCanvas: true,\r\n            showPatches: true,\r\n            showFoundPatches: true,\r\n            showSkeleton: true,\r\n            showLabels: true,\r\n            showPatchLabels: true,\r\n            showRemainingPatchLabels: true,\r\n            boxFromPatches: {\r\n              showTransformed: true,\r\n              showTransformedBox: true,\r\n              showBB: true\r\n            }\r\n          }\r\n        }\r\n      },\r\n      function(err) {\r\n        if (err) {\r\n          alert(\"You need a camera to scan barcodes.\");\r\n          console.log(err);\r\n          document.querySelector(\"#scanner-container\").innerHTML = \"\";\r\n\r\n          return;\r\n        }\r\n\r\n        console.log(\"Initialization finished. Ready to start\");\r\n        Quagga.start();\r\n\r\n        // Set flag to is running\r\n        //_scannerIsRunning = true;\r\n      }\r\n    );\r\n\r\n    Quagga.onProcessed(function(result) {\r\n      var drawingCtx = Quagga.canvas.ctx.overlay,\r\n        drawingCanvas = Quagga.canvas.dom.overlay;\r\n\r\n      if (result) {\r\n        if (result.boxes) {\r\n          drawingCtx.clearRect(\r\n            0,\r\n            0,\r\n            parseInt(drawingCanvas.getAttribute(\"width\")),\r\n            parseInt(drawingCanvas.getAttribute(\"height\"))\r\n          );\r\n          result.boxes\r\n            .filter(function(box) {\r\n              return box !== result.box;\r\n            })\r\n            .forEach(function(box) {\r\n              Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, {\r\n                color: \"green\",\r\n                lineWidth: 2\r\n              });\r\n            });\r\n        }\r\n\r\n        if (result.box) {\r\n          Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, {\r\n            color: \"#00F\",\r\n            lineWidth: 2\r\n          });\r\n        }\r\n\r\n        if (result.codeResult && result.codeResult.code) {\r\n          Quagga.ImageDebug.drawPath(\r\n            result.line,\r\n            { x: \"x\", y: \"y\" },\r\n            drawingCtx,\r\n            { color: \"red\", lineWidth: 3 }\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    Quagga.onDetected(function(result) {\r\n      Quagga.stop();\r\n      document.querySelector(\"#text-input\").value = result.codeResult.code;\r\n      document.querySelector(\"#scanner-container\").innerHTML = \"\";\r\n      console.log(\r\n        \"Barcode detected and processed : [\" + result.codeResult.code + \"]\",\r\n        result\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"inline-block\" }}>\r\n        <input type=\"text\" id=\"text-input\" />\r\n        <button onClick={this.handleClick}> Scan </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarcodeTextField;\r\n","import './App.css';\nimport BarcodeTextField from './BarcodeTextField';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"scanner-container\" />\n      <div>\n        <p style={{ display: \"inline-block\" }}>Barcode: </p>\n        <BarcodeTextField style={{ display: \"inline-block\" }} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);\n"],"sourceRoot":""}